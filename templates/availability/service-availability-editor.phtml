<service-availability-editor inline-template>
    <div class="eddbk-inputs">
        <modal @close="closeModal"
               :active="modalState.isOn()"
        >
            <div slot="header">
                Service availability

                <div class="modal__close modal--right" @click="closeModal()" v-if="!closeConfirming">&times;</div>
                <div class="modal__header-buttons modal--right" v-else>
                    <input type="button" class="button button-dark-solid" value="Close" @click="forceCloseModal">
                    <input type="button" class="button" value="Continue Editing" @click="continueEditing">
                </div>
            </div>

            <div slot="body" :class="isDoubleConfirming ? 'disabled' : ''">
                <div :class="['form-row', errors.has('start') ? 'form-row--with-error' : '']">
                    <div class="form-row__label">
                        Starts on
                    </div>
                    <div class="form-row__input">
                        <div class="form-row__input-with-description">
                            <datetime-picker v-validate="'required|date_format:' + config.formats.datetime.tzFree"
                                             data-vv-name="start"
                                             name="start"
                                             ref="start"
                                             @input="startChanged"
                                             v-model="model.start"
                                             :time-disabled="model.isAllDay"
                                             :disabled-before="currentDay"
                            ></datetime-picker>
                            <div class="form-row__description form-row__description--small">
                                {{ momentHelpers.timezoneLabel(timezone) }}
                            </div>
                        </div>

                        <label for="all-day" class="form-row__word">
                            <input type="checkbox" id="all-day" v-model="model.isAllDay"> All day
                        </label>
                    </div>
                </div>
                <div :class="['form-row', errors.has('end') ? 'form-row--with-error' : '']">
                    <div class="form-row__label">
                        Ends on
                        <div class="form-row__description form-row__error" v-if="errors.firstByRule('end', 'after')">{{ errors.firstByRule('end', 'after').replace('$', '') }}</div>
                    </div>
                    <div class="form-row__input">
                        <div class="form-row__input-with-description">
                            <?php // Params list for `after` datetime validation rule: after:{field for comparing},{are fields can be equal (`>=`) , default is `false` (`>`)} ?>
                            <datetime-picker class="datetime-picker--inline"
                                             v-validate="'required|date_format:' + config.formats.datetime.tzFree + '|after:$start' + (model.isAllDay ? ',true' : '')"
                                             name="end"
                                             @input="errors.remove('end')"
                                             v-model="model.end"
                                             :time-disabled="model.isAllDay"
                                             :disabled-before="model.start"
                            ></datetime-picker>
                            <div class="form-row__description form-row__description--small">
                                {{ momentHelpers.timezoneLabel(timezone) }}
                            </div>
                        </div>
                    </div>
                </div>

<!--                <hr>-->

                <div class="form-row">
                    <div class="form-row__label">Repeats</div>
                    <div class="form-row__input">
                        <label for="is-repeated" class="form-row__word">
                            <input type="checkbox" id="is-repeated" v-model="model.repeat">
                        </label>
                    </div>
                </div>


                <template v-if="model.repeat">
<!--                    <hr>-->
                    <div :class="['form-row', errors.has('repeats_after') ? 'form-row--with-error' : '']">
                        <div class="form-row__label">
                            Repeats after
                            <div class="form-row__description form-row__error" v-if="errors.has('repeats_after')">{{ errors.first('repeats_after').replace('_', ' ') }}</div>
                        </div>
                        <div class="form-row__input">
                            <input type="number" style="width: 90px;vertical-align: middle;"
                                   v-validate="'min_value:' + minimalRepeatPeriod + '|max_value:' + repeatingDuration"
                                   name="repeats_after"
                                   @input="errors.remove('repeats_after')"
                                   :min="minimalRepeatPeriod"
                                   :max="repeatingDuration"
                                   v-model="model.repeatPeriod"
                            />

                            <select v-model="model.repeatUnit" style="min-width: 90px">
                                <option value="days">{{ pluralize(_('day'), Number(model.repeatPeriod)) }}</option>
                                <option value="weeks">{{ pluralize(_('week'), Number(model.repeatPeriod)) }}</option>
                                <option value="months">{{ pluralize(_('month'), Number(model.repeatPeriod)) }}</option>
                                <option value="years">{{ pluralize(_('year'), Number(model.repeatPeriod)) }}</option>
                            </select>

                            <span class="dashicons dashicons-editor-help eddbk-help" title="Repeats after x units.  Example: repeats after 3 days, starting on Monday woud make this available on Monday, then Thursday, then Sunday.  For instance, starting on Monday 30th April, the next availabilities would be Thursday 3rd May, then Sunday 6th May, then Wednesday 9th, and so on."></span>
                        </div>
                    </div>

                    <template v-if="model.repeatUnit === 'weeks' && isSameDay()">
                        <div class="form-row">
                            <div class="form-row__label">Repeats on</div>
                            <div class="form-row__input">
                                <selection-list :collection="repeatsOnCollection" v-model="model.repeatWeeklyOn" :multiple="true">
                                    <label class="label__rared" :for="r.getKey(r.item)" slot-scope="r">
                                        <input type="checkbox"
                                               :id="r.getKey(r.item)"
                                               :value="r.getKey(r.item)"
                                               @change="r.select(r.item)"
                                               :checked="r.isItemSelected(r.item)"
                                        > {{ r.item.value }}
                                    </label>
                                </selection-list>
                            </div>
                        </div>
                    </template>

                    <template v-if="model.repeatUnit === 'months'">
                        <div class="form-row">
                            <div class="form-row__label">Repeats on</div>
                            <div class="form-row__input">
                                <selection-list :collection="repeatsOnCollection" v-model="model.repeatMonthlyOn" wrap="select">
                                    <option :value="r.getKey(r.item)" slot-scope="r">{{ r.item.value }}</option>
                                </selection-list>
                            </div>
                        </div>
                    </template>

                    <div class="form-row">
                        <div class="form-row__label">Ends</div>
                        <div class="form-row__input">
                            <div>
                                <label for="ends-after" style="width: 90px; display: inline-block">
                                    <input type="radio" id="ends-after" value="period" v-model="model.repeatUntil"> After
                                </label>
                                <input type="number" min="1" placeholder="4" style="width: 90px" v-model="model.repeatUntilPeriod"> {{ repeatsUntilPeriodTitle }}
                            </div>

                            <div style="margin-top: 4px" class="inline-datepicker">
                                <label for="ends-on" style="width: 90px; display: inline-block">
                                    <input type="radio" id="ends-on" value="date" v-model="model.repeatUntil"> On
                                </label>
                                <datepicker name="repeatsEndsDate"
                                            v-model="repeatUntilDateModel"
                                            placeholder="-- / -- / ----"
                                            format="dd/MM/yyyy"
                                            style="width: 90px"
                                            :disabled="{to: availabilityStart}"
                                ></datepicker>
                            </div>
                        </div>
                    </div>

                    <div class="form-row">
                        <div class="form-row__label">
                            Exclusions
                            <div class="form-row__description">
                                Days excluded from the availability range
                            </div>
                        </div>
                        <div class="form-row__input form-row__input--padded">
                            <div>
                                <a href="#set-new-exclusions" class="add-new" @click="exclusionsPickerVisible = !exclusionsPickerVisible">
                                    {{ exclusionsPickerVisible ? '- Hide Exclusion\'s Picker' : '+ Set New Exclusions' }}
                                </a>
                            </div>

                            <div class="exclusions-datepicker" v-if="exclusionsPickerVisible">
                                <datepicker :inline="true"
                                            :highlighted="excludeDatesModels"
                                            @selected="excludeDateSelected"
                                            ref="exclusions"
                                ></datepicker>
                            </div>

                            <repeater :collection="excludeDatesCollection" class="exclusions-list" v-if="model.excludeDates.length">
                                <div class="exclusions-list__item" slot-scope="r">
                                    <div class="exclusions-list__item-title" v-text="_getExclusionItemTitle(r.item)"></div>
                                    <a href="#removed" class="trash-can trash-can--right" @click="r.remove(r.item)">
                                        <span class="trash-can__icon dashicons dashicons-trash"></span>
                                    </a>
                                </div>
                            </repeater>
                        </div>
                    </div>
                </template>
            </div>

            <div slot="footer">
                <div v-if="!removeConfirming" :class="isDoubleConfirming ? 'disabled' : ''">
                    <template v-if="model.id && entityCanBeModified()">
                        <input type="button" class="button button-alert" value="Delete" style="float: left" @click="removeConfirming = true">
                    </template>
                    <input type="button" class="button button-primary" v-if="!model.id || entityCanBeModified()" value="Save" @click="saveAvailability()">
                </div>
                <div class="footer-confirm" v-else-if="removeConfirming">
                    <div class="footer-confirm__message __alert __right">
                        Are you sure you want to delete this availability? There is no undo option.
                    </div>
                    <div class="footer-confirm__buttons">
                        <input type="button" class="button button-alert-solid" value="Yes, delete" @click="deleteItem">
                        <input type="button" class="button" value="Cancel" @click="removeConfirming = false">
                    </div>
                </div>
                <div class="footer-confirm" v-else>
                    <div class="footer-confirm__message __right"></div>
                    <div class="footer-confirm__buttons">
                        <input type="button" class="button button-dark-solid" value="Close" @click="forceCloseModal">
                        <input type="button" class="button" value="Continue Editing" @click="cancelConfirming = false">
                    </div>
                </div>
            </div>
        </modal>
    </div>
</service-availability-editor>